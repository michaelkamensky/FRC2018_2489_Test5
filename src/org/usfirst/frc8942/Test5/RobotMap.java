// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc8942.Test5;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SPI;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import com.kauailabs.navx.frc.AHRS;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveTrainLeftFrontTalonSRX;
    public static WPI_TalonSRX driveTrainLeftRearTalonSRX;
    public static SpeedControllerGroup driveTrainLeftSpeedControllerGroup;
    public static WPI_TalonSRX driveTrainRightFrontTalonSRX;
    public static WPI_TalonSRX driveTrainRightRearTalonSRX;
    public static SpeedControllerGroup driveTrainRightSpeedControllerGroup;
    public static DifferentialDrive driveTrainDifferentialDrive;
    public static AHRS ahrs;
    
    public static Compressor pneumaticsCompressor;
    public static DoubleSolenoid pneumaticsDoubleSolenoid1;
    public static DigitalInput pneumaticsLimitSwitch1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLeftFrontTalonSRX = new WPI_TalonSRX(11);
        driveTrainLeftFrontTalonSRX.setInverted(true);        
        
        driveTrainLeftRearTalonSRX = new WPI_TalonSRX(12);
        driveTrainLeftRearTalonSRX.setInverted(true); 
        
        
        driveTrainLeftSpeedControllerGroup = new SpeedControllerGroup(driveTrainLeftFrontTalonSRX, driveTrainLeftRearTalonSRX  );
        LiveWindow.addActuator("DriveTrain", "LeftSpeedControllerGroup", driveTrainLeftSpeedControllerGroup);
        
        driveTrainRightFrontTalonSRX = new WPI_TalonSRX(13);
        driveTrainRightFrontTalonSRX.setInverted(true);             
        
        driveTrainRightRearTalonSRX = new WPI_TalonSRX(14);
        driveTrainRightRearTalonSRX.setInverted(true);        
        
        driveTrainRightSpeedControllerGroup = new SpeedControllerGroup(driveTrainRightFrontTalonSRX, driveTrainRightRearTalonSRX  );
        LiveWindow.addActuator("DriveTrain", "RightSpeedControllerGroup", driveTrainRightSpeedControllerGroup);
        
        
        driveTrainDifferentialDrive = new DifferentialDrive(driveTrainLeftSpeedControllerGroup, driveTrainRightSpeedControllerGroup);
        LiveWindow.addActuator("DriveTrain", "DifferentialDrive", driveTrainDifferentialDrive);
        driveTrainDifferentialDrive.setSafetyEnabled(true);
        driveTrainDifferentialDrive.setExpiration(0.1);
        driveTrainDifferentialDrive.setMaxOutput(1.0);

        ahrs = new AHRS(SPI.Port.kMXP);
        
        pneumaticsCompressor = new Compressor(20);
        LiveWindow.addActuator("Pneumatics", "Compressor", pneumaticsCompressor);
        
        pneumaticsDoubleSolenoid1 = new DoubleSolenoid(20, 0, 1);
        LiveWindow.addActuator("Pneumatics", "Double Solenoid 1", pneumaticsDoubleSolenoid1);
        
        pneumaticsLimitSwitch1 = new DigitalInput(0);
        LiveWindow.addSensor("Pneumatics", "Limit Switch 1", pneumaticsLimitSwitch1);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
